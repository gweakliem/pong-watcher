buildscript {
    ext {
        springBootVersion = '1.4.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "org.flywaydb.flyway" version "4.0.3"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

jar {
    baseName = 'pong-watcher'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile('org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.0.2')
    compile('org.springframework.integration:spring-integration-mqtt:4.3.4.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    //compile('com.h2database:h2')
    compile('org.postgresql:postgresql:9.4.1211.jre7')
    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.4.0')
    compile('org.flywaydb:flyway-core:3.2.1')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task acceptanceTest(type: Exec) {
    workingDir (file(project.projectDir.absolutePath + "/acceptance_pong_watcher"))
    executable "bash"
    args "-c", "bundle install && bundle exec rspec"
}

flyway {
    url = "jdbc:postgresql://localhost:5432/pong_watch"
    user = 'ping'
    password = 'pong'
    //schemas = ["pong_watch"]
}
defaultTasks 'clean', 'build', 'acceptanceTest'